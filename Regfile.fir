;buildInfoPackage: chisel3, version: 3.2-20191106-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Regfile : 
  module Regfile : 
    input clock : Clock
    input reset : UInt<1>
    output io : {apb : {flip psel : UInt<1>, flip pwrite : UInt<1>, flip penable : UInt<1>, flip paddr : UInt<8>, flip pwdata : UInt<32>, prdata : UInt<32>, irq : UInt<1>}, hs : {flip key_curinfo : UInt<8>, flip key_vld : UInt<4>, key_ack : UInt<4>}, ctl : {ksen : UInt<1>, wken : UInt<1>, key_preinfo : UInt<8>, ioen : UInt<26>, pol : UInt<1>, deb_value : UInt<4>, rintval_value : UInt<4>, sintval_value : UInt<4>, flip cyc_value : UInt<5>, flip ctl_int : UInt<1>}}
    
    reg key_vld_d : UInt, clock @[Regfile.scala 20:28]
    key_vld_d <= io.hs.key_vld @[Regfile.scala 20:28]
    reg key_vld_dd : UInt, clock @[Regfile.scala 21:29]
    key_vld_dd <= key_vld_d @[Regfile.scala 21:29]
    reg key_ack : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Regfile.scala 22:26]
    node _T = eq(key_vld_dd, UInt<1>("h00")) @[Regfile.scala 23:33]
    node _T_1 = eq(key_vld_d, UInt<1>("h01")) @[Regfile.scala 23:55]
    node key_vld_r = and(_T, _T_1) @[Regfile.scala 23:42]
    when key_vld_r : @[Regfile.scala 24:21]
      key_ack <= UInt<1>("h01") @[Regfile.scala 25:15]
      skip @[Regfile.scala 24:21]
    else : @[Regfile.scala 26:17]
      key_ack <= UInt<1>("h00") @[Regfile.scala 27:15]
      skip @[Regfile.scala 26:17]
    io.hs.key_ack <= key_ack @[Regfile.scala 29:19]
    reg ctl_int_d : UInt, clock @[Regfile.scala 35:28]
    ctl_int_d <= io.ctl.ctl_int @[Regfile.scala 35:28]
    reg ctl_int_dd : UInt, clock @[Regfile.scala 36:29]
    ctl_int_dd <= ctl_int_d @[Regfile.scala 36:29]
    reg ctl_int_ddd : UInt, clock @[Regfile.scala 37:30]
    ctl_int_ddd <= ctl_int_dd @[Regfile.scala 37:30]
    reg ctl_int_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Regfile.scala 38:28]
    node _T_2 = eq(ctl_int_ddd, UInt<1>("h00")) @[Regfile.scala 39:18]
    node _T_3 = eq(ctl_int_dd, UInt<1>("h01")) @[Regfile.scala 39:46]
    node _T_4 = and(_T_2, _T_3) @[Regfile.scala 39:31]
    ctl_int_r <= _T_4 @[Regfile.scala 39:15]
    io.apb.irq <= ctl_int_r @[Regfile.scala 40:16]
    node _T_5 = and(io.apb.psel, io.apb.penable) @[Regfile.scala 54:30]
    node wr_en = and(_T_5, io.apb.pwrite) @[Regfile.scala 54:47]
    node _T_6 = eq(io.apb.penable, UInt<1>("h00")) @[Regfile.scala 55:32]
    node _T_7 = and(io.apb.psel, _T_6) @[Regfile.scala 55:29]
    node _T_8 = eq(io.apb.pwrite, UInt<1>("h00")) @[Regfile.scala 55:52]
    node rd_en = and(_T_7, _T_8) @[Regfile.scala 55:49]
    node reg_idx = shr(io.apb.paddr, 2) @[Regfile.scala 56:33]
    node _T_9 = eq(reg_idx, UInt<1>("h00")) @[Regfile.scala 58:30]
    node ks_en_wr = and(_T_9, wr_en) @[Regfile.scala 58:39]
    reg ks_en : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Regfile.scala 59:25]
    reg wk_en : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Regfile.scala 60:25]
    node _T_10 = eq(ks_en_wr, UInt<1>("h01")) @[Regfile.scala 61:19]
    when _T_10 : @[Regfile.scala 61:28]
      node _T_11 = bits(io.apb.pwdata, 0, 0) @[Regfile.scala 62:29]
      ks_en <= _T_11 @[Regfile.scala 62:13]
      node _T_12 = bits(io.apb.pwdata, 1, 1) @[Regfile.scala 63:29]
      wk_en <= _T_12 @[Regfile.scala 63:13]
      skip @[Regfile.scala 61:28]
    node _T_13 = cat(UInt<30>("h00"), ks_en) @[Cat.scala 29:58]
    node ks_en_bus = cat(_T_13, wk_en) @[Cat.scala 29:58]
    node _T_14 = eq(reg_idx, UInt<1>("h01")) @[Regfile.scala 67:31]
    node io_cfg_wr = and(_T_14, wr_en) @[Regfile.scala 67:40]
    reg ksoe : UInt<18>, clock with : (reset => (reset, UInt<18>("h00"))) @[Regfile.scala 68:24]
    reg ksie : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 69:24]
    node _T_15 = eq(io_cfg_wr, UInt<1>("h01")) @[Regfile.scala 70:20]
    when _T_15 : @[Regfile.scala 70:29]
      node _T_16 = bits(io.apb.pwdata, 25, 8) @[Regfile.scala 71:28]
      ksoe <= _T_16 @[Regfile.scala 71:12]
      node _T_17 = bits(io.apb.pwdata, 7, 0) @[Regfile.scala 72:28]
      ksie <= _T_17 @[Regfile.scala 72:12]
      skip @[Regfile.scala 70:29]
    node _T_18 = cat(UInt<6>("h00"), ksoe) @[Cat.scala 29:58]
    node io_cfg_bus = cat(_T_18, ksie) @[Cat.scala 29:58]
    node _T_19 = eq(reg_idx, UInt<2>("h02")) @[Regfile.scala 76:32]
    node int_cfg_wr = and(_T_19, wr_en) @[Regfile.scala 76:41]
    reg int_en : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Regfile.scala 77:26]
    reg ksf : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Regfile.scala 78:23]
    reg ksif : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Regfile.scala 79:24]
    node _T_20 = eq(int_cfg_wr, UInt<1>("h01")) @[Regfile.scala 80:21]
    when _T_20 : @[Regfile.scala 80:30]
      node _T_21 = bits(io.apb.pwdata, 0, 0) @[Regfile.scala 81:30]
      int_en <= _T_21 @[Regfile.scala 81:14]
      skip @[Regfile.scala 80:30]
    node _T_22 = eq(int_cfg_wr, UInt<1>("h01")) @[Regfile.scala 83:21]
    node _T_23 = bits(io.apb.pwdata, 1, 1) @[Regfile.scala 83:45]
    node _T_24 = and(_T_22, _T_23) @[Regfile.scala 83:29]
    when _T_24 : @[Regfile.scala 83:50]
      node _T_25 = bits(io.apb.pwdata, 1, 1) @[Regfile.scala 84:28]
      node _T_26 = not(_T_25) @[Regfile.scala 84:14]
      ksf <= _T_26 @[Regfile.scala 84:11]
      skip @[Regfile.scala 83:50]
    else : @[Regfile.scala 85:35]
      node _T_27 = eq(ctl_int_r, UInt<1>("h01")) @[Regfile.scala 85:26]
      when _T_27 : @[Regfile.scala 85:35]
        ksf <= UInt<1>("h01") @[Regfile.scala 86:11]
        skip @[Regfile.scala 85:35]
    node _T_28 = eq(int_cfg_wr, UInt<1>("h01")) @[Regfile.scala 88:21]
    node _T_29 = bits(io.apb.pwdata, 2, 2) @[Regfile.scala 88:45]
    node _T_30 = and(_T_28, _T_29) @[Regfile.scala 88:29]
    when _T_30 : @[Regfile.scala 88:50]
      node _T_31 = bits(io.apb.pwdata, 2, 2) @[Regfile.scala 89:29]
      node _T_32 = not(_T_31) @[Regfile.scala 89:15]
      ksif <= _T_32 @[Regfile.scala 89:12]
      skip @[Regfile.scala 88:50]
    else : @[Regfile.scala 90:35]
      node _T_33 = eq(ctl_int_r, UInt<1>("h01")) @[Regfile.scala 90:26]
      when _T_33 : @[Regfile.scala 90:35]
        ksif <= int_en @[Regfile.scala 91:12]
        skip @[Regfile.scala 90:35]
    node _T_34 = cat(ksf, int_en) @[Cat.scala 29:58]
    node _T_35 = cat(UInt<29>("h00"), ksif) @[Cat.scala 29:58]
    node int_cfg_bus = cat(_T_35, _T_34) @[Cat.scala 29:58]
    node _T_36 = eq(reg_idx, UInt<2>("h03")) @[Regfile.scala 95:30]
    node ks_cfg_wr = and(_T_36, wr_en) @[Regfile.scala 95:39]
    reg pol : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Regfile.scala 96:23]
    reg clr_key : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Regfile.scala 97:27]
    reg sintval_value : UInt<4>, clock with : (reset => (reset, UInt<4>("h08"))) @[Regfile.scala 98:33]
    reg rintval_value : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Regfile.scala 99:33]
    reg deb_value : UInt<4>, clock with : (reset => (reset, UInt<4>("h04"))) @[Regfile.scala 100:29]
    node _T_37 = eq(ks_cfg_wr, UInt<1>("h01")) @[Regfile.scala 101:20]
    when _T_37 : @[Regfile.scala 101:29]
      node _T_38 = bits(io.apb.pwdata, 13, 13) @[Regfile.scala 102:27]
      pol <= _T_38 @[Regfile.scala 102:11]
      node _T_39 = bits(io.apb.pwdata, 12, 12) @[Regfile.scala 103:31]
      clr_key <= _T_39 @[Regfile.scala 103:15]
      node _T_40 = bits(io.apb.pwdata, 11, 8) @[Regfile.scala 104:37]
      sintval_value <= _T_40 @[Regfile.scala 104:21]
      node _T_41 = bits(io.apb.pwdata, 7, 4) @[Regfile.scala 105:37]
      rintval_value <= _T_41 @[Regfile.scala 105:21]
      node _T_42 = bits(io.apb.pwdata, 3, 0) @[Regfile.scala 106:33]
      deb_value <= _T_42 @[Regfile.scala 106:17]
      skip @[Regfile.scala 101:29]
    node _T_43 = cat(sintval_value, rintval_value) @[Cat.scala 29:58]
    node _T_44 = cat(_T_43, deb_value) @[Cat.scala 29:58]
    node _T_45 = cat(UInt<18>("h00"), pol) @[Cat.scala 29:58]
    node _T_46 = cat(_T_45, clr_key) @[Cat.scala 29:58]
    node ks_cfg_bus = cat(_T_46, _T_44) @[Cat.scala 29:58]
    reg rows_0 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_47 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_47 : @[Regfile.scala 113:29]
      rows_0 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_48 = eq(io.ctl.cyc_value, UInt<1>("h00")) @[Regfile.scala 115:36]
      node _T_49 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_50 = and(_T_48, _T_49) @[Regfile.scala 115:45]
      when _T_50 : @[Regfile.scala 115:69]
        rows_0 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_0 <= rows_0 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_1 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_51 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_51 : @[Regfile.scala 113:29]
      rows_1 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_52 = eq(io.ctl.cyc_value, UInt<1>("h01")) @[Regfile.scala 115:36]
      node _T_53 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_54 = and(_T_52, _T_53) @[Regfile.scala 115:45]
      when _T_54 : @[Regfile.scala 115:69]
        rows_1 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_1 <= rows_1 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_2 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_55 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_55 : @[Regfile.scala 113:29]
      rows_2 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_56 = eq(io.ctl.cyc_value, UInt<2>("h02")) @[Regfile.scala 115:36]
      node _T_57 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_58 = and(_T_56, _T_57) @[Regfile.scala 115:45]
      when _T_58 : @[Regfile.scala 115:69]
        rows_2 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_2 <= rows_2 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_3 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_59 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_59 : @[Regfile.scala 113:29]
      rows_3 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_60 = eq(io.ctl.cyc_value, UInt<2>("h03")) @[Regfile.scala 115:36]
      node _T_61 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_62 = and(_T_60, _T_61) @[Regfile.scala 115:45]
      when _T_62 : @[Regfile.scala 115:69]
        rows_3 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_3 <= rows_3 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_4 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_63 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_63 : @[Regfile.scala 113:29]
      rows_4 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_64 = eq(io.ctl.cyc_value, UInt<3>("h04")) @[Regfile.scala 115:36]
      node _T_65 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_66 = and(_T_64, _T_65) @[Regfile.scala 115:45]
      when _T_66 : @[Regfile.scala 115:69]
        rows_4 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_4 <= rows_4 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_5 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_67 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_67 : @[Regfile.scala 113:29]
      rows_5 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_68 = eq(io.ctl.cyc_value, UInt<3>("h05")) @[Regfile.scala 115:36]
      node _T_69 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_70 = and(_T_68, _T_69) @[Regfile.scala 115:45]
      when _T_70 : @[Regfile.scala 115:69]
        rows_5 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_5 <= rows_5 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_6 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_71 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_71 : @[Regfile.scala 113:29]
      rows_6 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_72 = eq(io.ctl.cyc_value, UInt<3>("h06")) @[Regfile.scala 115:36]
      node _T_73 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_74 = and(_T_72, _T_73) @[Regfile.scala 115:45]
      when _T_74 : @[Regfile.scala 115:69]
        rows_6 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_6 <= rows_6 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_7 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_75 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_75 : @[Regfile.scala 113:29]
      rows_7 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_76 = eq(io.ctl.cyc_value, UInt<3>("h07")) @[Regfile.scala 115:36]
      node _T_77 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_78 = and(_T_76, _T_77) @[Regfile.scala 115:45]
      when _T_78 : @[Regfile.scala 115:69]
        rows_7 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_7 <= rows_7 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_8 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_79 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_79 : @[Regfile.scala 113:29]
      rows_8 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_80 = eq(io.ctl.cyc_value, UInt<4>("h08")) @[Regfile.scala 115:36]
      node _T_81 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_82 = and(_T_80, _T_81) @[Regfile.scala 115:45]
      when _T_82 : @[Regfile.scala 115:69]
        rows_8 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_8 <= rows_8 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_9 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_83 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_83 : @[Regfile.scala 113:29]
      rows_9 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_84 = eq(io.ctl.cyc_value, UInt<4>("h09")) @[Regfile.scala 115:36]
      node _T_85 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_86 = and(_T_84, _T_85) @[Regfile.scala 115:45]
      when _T_86 : @[Regfile.scala 115:69]
        rows_9 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_9 <= rows_9 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_10 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_87 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_87 : @[Regfile.scala 113:29]
      rows_10 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_88 = eq(io.ctl.cyc_value, UInt<4>("h0a")) @[Regfile.scala 115:36]
      node _T_89 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_90 = and(_T_88, _T_89) @[Regfile.scala 115:45]
      when _T_90 : @[Regfile.scala 115:69]
        rows_10 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_10 <= rows_10 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_11 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_91 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_91 : @[Regfile.scala 113:29]
      rows_11 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_92 = eq(io.ctl.cyc_value, UInt<4>("h0b")) @[Regfile.scala 115:36]
      node _T_93 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_94 = and(_T_92, _T_93) @[Regfile.scala 115:45]
      when _T_94 : @[Regfile.scala 115:69]
        rows_11 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_11 <= rows_11 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_12 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_95 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_95 : @[Regfile.scala 113:29]
      rows_12 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_96 = eq(io.ctl.cyc_value, UInt<4>("h0c")) @[Regfile.scala 115:36]
      node _T_97 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_98 = and(_T_96, _T_97) @[Regfile.scala 115:45]
      when _T_98 : @[Regfile.scala 115:69]
        rows_12 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_12 <= rows_12 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_13 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_99 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_99 : @[Regfile.scala 113:29]
      rows_13 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_100 = eq(io.ctl.cyc_value, UInt<4>("h0d")) @[Regfile.scala 115:36]
      node _T_101 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_102 = and(_T_100, _T_101) @[Regfile.scala 115:45]
      when _T_102 : @[Regfile.scala 115:69]
        rows_13 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_13 <= rows_13 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_14 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_103 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_103 : @[Regfile.scala 113:29]
      rows_14 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_104 = eq(io.ctl.cyc_value, UInt<4>("h0e")) @[Regfile.scala 115:36]
      node _T_105 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_106 = and(_T_104, _T_105) @[Regfile.scala 115:45]
      when _T_106 : @[Regfile.scala 115:69]
        rows_14 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_14 <= rows_14 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_15 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_107 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_107 : @[Regfile.scala 113:29]
      rows_15 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_108 = eq(io.ctl.cyc_value, UInt<4>("h0f")) @[Regfile.scala 115:36]
      node _T_109 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_110 = and(_T_108, _T_109) @[Regfile.scala 115:45]
      when _T_110 : @[Regfile.scala 115:69]
        rows_15 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_15 <= rows_15 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_16 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_111 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_111 : @[Regfile.scala 113:29]
      rows_16 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_112 = eq(io.ctl.cyc_value, UInt<5>("h010")) @[Regfile.scala 115:36]
      node _T_113 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_114 = and(_T_112, _T_113) @[Regfile.scala 115:45]
      when _T_114 : @[Regfile.scala 115:69]
        rows_16 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_16 <= rows_16 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    reg rows_17 : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Regfile.scala 112:23]
    node _T_115 = eq(clr_key, UInt<1>("h01")) @[Regfile.scala 113:20]
    when _T_115 : @[Regfile.scala 113:29]
      rows_17 <= UInt<1>("h00") @[Regfile.scala 114:17]
      skip @[Regfile.scala 113:29]
    else : @[Regfile.scala 115:69]
      node _T_116 = eq(io.ctl.cyc_value, UInt<5>("h011")) @[Regfile.scala 115:36]
      node _T_117 = eq(key_vld_r, UInt<1>("h01")) @[Regfile.scala 115:59]
      node _T_118 = and(_T_116, _T_117) @[Regfile.scala 115:45]
      when _T_118 : @[Regfile.scala 115:69]
        rows_17 <= io.hs.key_curinfo @[Regfile.scala 116:17]
        skip @[Regfile.scala 115:69]
      else : @[Regfile.scala 117:19]
        rows_17 <= rows_17 @[Regfile.scala 118:17]
        skip @[Regfile.scala 117:19]
    node _T_119 = cat(rows_1, rows_0) @[Cat.scala 29:58]
    node _T_120 = cat(rows_3, rows_2) @[Cat.scala 29:58]
    node ks_info0_bus = cat(_T_120, _T_119) @[Cat.scala 29:58]
    node _T_121 = cat(rows_5, rows_4) @[Cat.scala 29:58]
    node _T_122 = cat(rows_7, rows_6) @[Cat.scala 29:58]
    node ks_info1_bus = cat(_T_122, _T_121) @[Cat.scala 29:58]
    node _T_123 = cat(rows_9, rows_8) @[Cat.scala 29:58]
    node _T_124 = cat(rows_11, rows_10) @[Cat.scala 29:58]
    node ks_info2_bus = cat(_T_124, _T_123) @[Cat.scala 29:58]
    node _T_125 = cat(rows_13, rows_12) @[Cat.scala 29:58]
    node _T_126 = cat(rows_15, rows_14) @[Cat.scala 29:58]
    node ks_info3_bus = cat(_T_126, _T_125) @[Cat.scala 29:58]
    node _T_127 = cat(UInt<16>("h00"), rows_17) @[Cat.scala 29:58]
    node ks_info4_bus = cat(_T_127, rows_16) @[Cat.scala 29:58]
    node _T_128 = bits(rd_en, 0, 0) @[Regfile.scala 127:38]
    node _T_129 = eq(reg_idx, UInt<1>("h00")) @[Regfile.scala 127:76]
    node _T_130 = eq(reg_idx, UInt<1>("h01")) @[Regfile.scala 128:16]
    node _T_131 = eq(reg_idx, UInt<2>("h02")) @[Regfile.scala 129:16]
    node _T_132 = eq(reg_idx, UInt<2>("h03")) @[Regfile.scala 130:16]
    node _T_133 = eq(reg_idx, UInt<3>("h04")) @[Regfile.scala 131:16]
    node _T_134 = eq(reg_idx, UInt<3>("h05")) @[Regfile.scala 132:16]
    node _T_135 = eq(reg_idx, UInt<3>("h06")) @[Regfile.scala 133:16]
    node _T_136 = eq(reg_idx, UInt<3>("h07")) @[Regfile.scala 134:16]
    node _T_137 = eq(reg_idx, UInt<4>("h08")) @[Regfile.scala 135:16]
    node _T_138 = mux(_T_137, ks_info4_bus, UInt<32>("h00")) @[Mux.scala 87:16]
    node _T_139 = mux(_T_136, ks_info3_bus, _T_138) @[Mux.scala 87:16]
    node _T_140 = mux(_T_135, ks_info2_bus, _T_139) @[Mux.scala 87:16]
    node _T_141 = mux(_T_134, ks_info1_bus, _T_140) @[Mux.scala 87:16]
    node _T_142 = mux(_T_133, ks_info0_bus, _T_141) @[Mux.scala 87:16]
    node _T_143 = mux(_T_132, ks_cfg_bus, _T_142) @[Mux.scala 87:16]
    node _T_144 = mux(_T_131, int_cfg_bus, _T_143) @[Mux.scala 87:16]
    node _T_145 = mux(_T_130, io_cfg_bus, _T_144) @[Mux.scala 87:16]
    node _T_146 = mux(_T_129, ks_en_bus, _T_145) @[Mux.scala 87:16]
    node _T_147 = mux(_T_128, _T_146, UInt<1>("h00")) @[Regfile.scala 127:25]
    io.apb.prdata <= _T_147 @[Regfile.scala 127:19]
    node sel_cyc_value_0 = eq(io.ctl.cyc_value, UInt<1>("h00")) @[Regfile.scala 137:67]
    node sel_cyc_value_1 = eq(io.ctl.cyc_value, UInt<1>("h01")) @[Regfile.scala 137:67]
    node sel_cyc_value_2 = eq(io.ctl.cyc_value, UInt<2>("h02")) @[Regfile.scala 137:67]
    node sel_cyc_value_3 = eq(io.ctl.cyc_value, UInt<2>("h03")) @[Regfile.scala 137:67]
    node sel_cyc_value_4 = eq(io.ctl.cyc_value, UInt<3>("h04")) @[Regfile.scala 137:67]
    node sel_cyc_value_5 = eq(io.ctl.cyc_value, UInt<3>("h05")) @[Regfile.scala 137:67]
    node sel_cyc_value_6 = eq(io.ctl.cyc_value, UInt<3>("h06")) @[Regfile.scala 137:67]
    node sel_cyc_value_7 = eq(io.ctl.cyc_value, UInt<3>("h07")) @[Regfile.scala 137:67]
    node sel_cyc_value_8 = eq(io.ctl.cyc_value, UInt<4>("h08")) @[Regfile.scala 137:67]
    node sel_cyc_value_9 = eq(io.ctl.cyc_value, UInt<4>("h09")) @[Regfile.scala 137:67]
    node sel_cyc_value_10 = eq(io.ctl.cyc_value, UInt<4>("h0a")) @[Regfile.scala 137:67]
    node sel_cyc_value_11 = eq(io.ctl.cyc_value, UInt<4>("h0b")) @[Regfile.scala 137:67]
    node sel_cyc_value_12 = eq(io.ctl.cyc_value, UInt<4>("h0c")) @[Regfile.scala 137:67]
    node sel_cyc_value_13 = eq(io.ctl.cyc_value, UInt<4>("h0d")) @[Regfile.scala 137:67]
    node sel_cyc_value_14 = eq(io.ctl.cyc_value, UInt<4>("h0e")) @[Regfile.scala 137:67]
    node sel_cyc_value_15 = eq(io.ctl.cyc_value, UInt<4>("h0f")) @[Regfile.scala 137:67]
    node sel_cyc_value_16 = eq(io.ctl.cyc_value, UInt<5>("h010")) @[Regfile.scala 137:67]
    node sel_cyc_value_17 = eq(io.ctl.cyc_value, UInt<5>("h011")) @[Regfile.scala 137:67]
    node _T_148 = bits(ksoe, 0, 0) @[Regfile.scala 138:53]
    node sel_rows_0 = mux(_T_148, rows_0, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_149 = bits(ksoe, 1, 1) @[Regfile.scala 138:53]
    node sel_rows_1 = mux(_T_149, rows_1, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_150 = bits(ksoe, 2, 2) @[Regfile.scala 138:53]
    node sel_rows_2 = mux(_T_150, rows_2, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_151 = bits(ksoe, 3, 3) @[Regfile.scala 138:53]
    node sel_rows_3 = mux(_T_151, rows_3, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_152 = bits(ksoe, 4, 4) @[Regfile.scala 138:53]
    node sel_rows_4 = mux(_T_152, rows_4, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_153 = bits(ksoe, 5, 5) @[Regfile.scala 138:53]
    node sel_rows_5 = mux(_T_153, rows_5, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_154 = bits(ksoe, 6, 6) @[Regfile.scala 138:53]
    node sel_rows_6 = mux(_T_154, rows_6, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_155 = bits(ksoe, 7, 7) @[Regfile.scala 138:53]
    node sel_rows_7 = mux(_T_155, rows_7, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_156 = bits(ksoe, 8, 8) @[Regfile.scala 138:53]
    node sel_rows_8 = mux(_T_156, rows_8, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_157 = bits(ksoe, 9, 9) @[Regfile.scala 138:53]
    node sel_rows_9 = mux(_T_157, rows_9, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_158 = bits(ksoe, 10, 10) @[Regfile.scala 138:53]
    node sel_rows_10 = mux(_T_158, rows_10, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_159 = bits(ksoe, 11, 11) @[Regfile.scala 138:53]
    node sel_rows_11 = mux(_T_159, rows_11, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_160 = bits(ksoe, 12, 12) @[Regfile.scala 138:53]
    node sel_rows_12 = mux(_T_160, rows_12, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_161 = bits(ksoe, 13, 13) @[Regfile.scala 138:53]
    node sel_rows_13 = mux(_T_161, rows_13, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_162 = bits(ksoe, 14, 14) @[Regfile.scala 138:53]
    node sel_rows_14 = mux(_T_162, rows_14, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_163 = bits(ksoe, 15, 15) @[Regfile.scala 138:53]
    node sel_rows_15 = mux(_T_163, rows_15, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_164 = bits(ksoe, 16, 16) @[Regfile.scala 138:53]
    node sel_rows_16 = mux(_T_164, rows_16, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_165 = bits(ksoe, 17, 17) @[Regfile.scala 138:53]
    node sel_rows_17 = mux(_T_165, rows_17, UInt<1>("h00")) @[Regfile.scala 138:48]
    node _T_166 = mux(sel_cyc_value_17, sel_rows_17, UInt<8>("h00")) @[Mux.scala 87:16]
    node _T_167 = mux(sel_cyc_value_16, sel_rows_16, _T_166) @[Mux.scala 87:16]
    node _T_168 = mux(sel_cyc_value_15, sel_rows_15, _T_167) @[Mux.scala 87:16]
    node _T_169 = mux(sel_cyc_value_14, sel_rows_14, _T_168) @[Mux.scala 87:16]
    node _T_170 = mux(sel_cyc_value_13, sel_rows_13, _T_169) @[Mux.scala 87:16]
    node _T_171 = mux(sel_cyc_value_12, sel_rows_12, _T_170) @[Mux.scala 87:16]
    node _T_172 = mux(sel_cyc_value_11, sel_rows_11, _T_171) @[Mux.scala 87:16]
    node _T_173 = mux(sel_cyc_value_10, sel_rows_10, _T_172) @[Mux.scala 87:16]
    node _T_174 = mux(sel_cyc_value_9, sel_rows_9, _T_173) @[Mux.scala 87:16]
    node _T_175 = mux(sel_cyc_value_8, sel_rows_8, _T_174) @[Mux.scala 87:16]
    node _T_176 = mux(sel_cyc_value_7, sel_rows_7, _T_175) @[Mux.scala 87:16]
    node _T_177 = mux(sel_cyc_value_6, sel_rows_6, _T_176) @[Mux.scala 87:16]
    node _T_178 = mux(sel_cyc_value_5, sel_rows_5, _T_177) @[Mux.scala 87:16]
    node _T_179 = mux(sel_cyc_value_4, sel_rows_4, _T_178) @[Mux.scala 87:16]
    node _T_180 = mux(sel_cyc_value_3, sel_rows_3, _T_179) @[Mux.scala 87:16]
    node _T_181 = mux(sel_cyc_value_2, sel_rows_2, _T_180) @[Mux.scala 87:16]
    node _T_182 = mux(sel_cyc_value_1, sel_rows_1, _T_181) @[Mux.scala 87:16]
    node key_info = mux(sel_cyc_value_0, sel_rows_0, _T_182) @[Mux.scala 87:16]
    node _T_183 = and(key_info, ksie) @[Regfile.scala 145:34]
    io.ctl.key_preinfo <= _T_183 @[Regfile.scala 145:22]
    io.ctl.wken <= wk_en @[Regfile.scala 146:15]
    io.ctl.ksen <= ks_en @[Regfile.scala 147:15]
    node _T_184 = cat(ksoe, ksie) @[Cat.scala 29:58]
    io.ctl.ioen <= _T_184 @[Regfile.scala 148:15]
    io.ctl.pol <= pol @[Regfile.scala 149:14]
    io.ctl.deb_value <= deb_value @[Regfile.scala 150:20]
    io.ctl.rintval_value <= rintval_value @[Regfile.scala 151:24]
    io.ctl.sintval_value <= sintval_value @[Regfile.scala 152:24]
    
